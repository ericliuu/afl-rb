#!/bin/bash

rm -f $3
rm -f $4

total=0
for len in $(cut -d ':' -f 1 $1)
do
	echo "len: $((($len+1)*2))"
	xxd -c 100000 -s $total -l $((($len+1)*2)) -ps $2 >> $3
	total=$(($total+$(($len+1))))
	echo "total: $total"
done

for line in $(cat $3)
do
	len_octet=0
	len_bytes=0
	total=0
	total_ones=0
	while read -n1 ch; do
		case $ch in			
			1)
			total_ones=$(($total_ones+1))
			;;
			
			2)
			total_ones=$(($total_ones+1))
			;;
			
			3)
			total_ones=$(($total_ones+2))
			;;
			
			4)
			total_ones=$(($total_ones+1))
			;;
			
			5)
			total_ones=$(($total_ones+2))
			;;
			
			6)
			total_ones=$(($total_ones+2))
			;;
			
			7)
			total_ones=$(($total_ones+3))
			;;
			
			8)
			total_ones=$(($total_ones+1))
			;;
			
			9)
			total_ones=$(($total_ones+2))
			;;
			
			a|A)
			total_ones=$(($total_ones+2))
			;;
			
			b|B)
			total_ones=$(($total_ones+3))
			;;
			
			c|C)
			total_ones=$(($total_ones+2))
			;;
			
			d|D)
			total_ones=$(($total_ones+3))
			;;
			
			e|E)
			total_ones=$(($total_ones+3))
			;;
			
			f|F)
			total_ones=$(($total_ones+4))
			;;
			
			*)
			total_ones=$(($total_ones+0))
			;;
		esac
		total=$(($total+4))
		len_octet=$(($len_octet+1))
	done < <(echo -n "$line")
	len_bytes=$(($len_octet/2))
	echo "len_bytes: $len_bytes  ###  len_octet: $len_octet  ###  Total bits: $total  ###  Total 1 bits: $total_ones"
	echo "len_bytes: $len_bytes  ###  len_octet: $len_octet  ###  Total bits: $total  ###  Total 1 bits: $total_ones" >> $4
done

